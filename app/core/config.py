"""
Configura√ß√µes centralizadas da aplica√ß√£o.
"""
import os
from pathlib import Path
from dotenv import load_dotenv


# Carrega vari√°veis de ambiente
ROOT_PATH = Path(__file__).resolve().parents[2]
ENV_FILE = ROOT_PATH / ".env"

if ENV_FILE.exists():
    load_dotenv(dotenv_path=ENV_FILE)
    print(f"‚úÖ Arquivo .env carregado de: {ENV_FILE}")
else:
    print(f"‚ö†Ô∏è Arquivo .env n√£o encontrado em: {ENV_FILE}")


class Settings:
    """Configura√ß√µes da aplica√ß√£o."""
    
    # MongoDB
    MONGO_URL: str = os.getenv("MONGO_URL", "")
    MONGO_DB: str = os.getenv("MONGO_DB", "chatdb")

    # Redis
    REDIS_URL: str = os.getenv("REDIS_URL", "redis://localhost:6379")
    REDIS_CACHE_TTL: int = 86400  # 24 horas
    REDIS_RATE_LIMIT_MAX: int = 30  # mensagens
    REDIS_RATE_LIMIT_WINDOW: int = 60  # segundos
    
    # API
    API_TITLE: str = "Chat API - FastAPI + MongoDB Atlas"
    API_VERSION: str = "2.0.0"
    API_DESCRIPTION: str = """
    ## üöÄ API de Chat em Tempo Real
    
    Sistema de chat com:
    - ‚úÖ WebSocket para mensagens em tempo real
    - ‚úÖ REST API para hist√≥rico
    - ‚úÖ MongoDB Atlas para persist√™ncia
    - ‚úÖ Valida√ß√£o com Pydantic
    """
    
    # CORS
    CORS_ORIGINS: list = ["*"]  # Em produ√ß√£o, especifique os dom√≠nios
    
    # Limites
    MESSAGE_MAX_LENGTH: int = 1000
    USERNAME_MAX_LENGTH: int = 50
    HISTORY_DEFAULT_LIMIT: int = 20
    HISTORY_MAX_LIMIT: int = 100
    
    @property
    def is_configured(self) -> bool:
        """Verifica se as configura√ß√µes essenciais est√£o definidas."""
        return bool(self.MONGO_URL)
    
    def validate(self):
        """Valida as configura√ß√µes."""
        if not self.MONGO_URL:
            raise ValueError(
                "‚ùå MONGO_URL n√£o est√° configurada! "
                "Verifique seu arquivo .env"
            )
        
        if not self.MONGO_DB:
            raise ValueError(
                "‚ùå MONGO_DB n√£o est√° configurada! "
                "Usando valor padr√£o: chatdb"
            )
        
        print("‚úÖ Configura√ß√µes validadas com sucesso!")
        return True


# Inst√¢ncia global das configura√ß√µes
settings = Settings()